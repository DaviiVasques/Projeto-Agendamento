﻿@{
    ViewData["Title"] = "Calendário de Eventos";
}

<div class="container">
    <h1 class="text-center my-4">Calendário de Eventos</h1>

    <div class="row">
        <div class="col-md-8">
            <h3>Calendário</h3>
            <div id="calendario"></div>
        </div>
        <div class="col-md-4">
            <h3>Adicionar Evento</h3>
            <form id="eventoForm">
                <div class="form-group">
                    <label for="eventoNome">Nome do Evento</label>
                    <input type="text" id="eventoNome" class="form-control" required />
                </div>
                <div class="form-group">
                    <label for="eventoData">Data</label>
                    <input type="date" id="eventoData" class="form-control" required />
                </div>
                <div class="form-group">
                    <label for="eventoDescricao">Descrição</label>
                    <textarea id="eventoDescricao" class="form-control"></textarea>
                </div>
                <button type="submit" class="btn btn-success">Adicionar Evento</button>
            </form>

            <h3 class="mt-4">Eventos Cadastrados</h3>
            <div id="listaEventos"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendario');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: [],
                dateClick: function(info) {
                    document.getElementById('eventoData').value = info.dateStr;
                }
            });
            calendar.render();

            carregarEventos();

            document.getElementById('eventoForm').addEventListener('submit', function(e) {
                e.preventDefault();

                const evento = {
                    nome: document.getElementById('eventoNome').value,
                    data: document.getElementById('eventoData').value,
                    descricao: document.getElementById('eventoDescricao').value
                };

                fetch('/api/eventos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(evento)
                })
                .then(response => response.json())
                .then(data => {
                    alert('Evento adicionado com sucesso!');
                    document.getElementById('eventoForm').reset();
                    carregarEventos();
                })
                .catch(error => {
                    alert('Erro ao adicionar evento: ' + error.message);
                });
            });

            function carregarEventos() {
                fetch('/api/eventos')
                    .then(response => response.json())
                    .then(data => {
                        // Atualizar calendário
                        calendar.removeAllEvents();
                        data.forEach(e => {
                            calendar.addEvent({
                                title: e.nome,
                                start: e.data,
                                description: e.descricao,
                                id: e.id
                            });
                        });

                        // Atualizar lista
                        const lista = document.getElementById('listaEventos');
                        lista.innerHTML = '';
                        data.forEach(e => {
                            const item = document.createElement('div');
                            item.className = 'alert alert-info';
                            item.innerHTML = `
                                <strong>${e.nome}</strong><br>
                                ${new Date(e.data).toLocaleDateString()}<br>
                                ${e.descricao || ''}
                                <button class="btn btn-sm btn-danger ml-2" onclick="deletarEvento(${e.id})">Excluir</button>
                            `;
                            lista.appendChild(item);
                        });
                    });
            }

            window.deletarEvento = function(id) {
                if (confirm('Tem certeza que deseja excluir este evento?')) {
                    fetch(`/api/eventos/${id}`, {
                        method: 'DELETE'
                    })
                    .then(response => {
                        if (response.ok) {
                            carregarEventos();
                        } else {
                            alert('Erro ao excluir evento');
                        }
                    });
                }
            };
        });
    </script>
}
